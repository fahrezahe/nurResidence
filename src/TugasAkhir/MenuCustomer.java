/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package TugasAkhir;

/**
 *
 * @author fahre
 */
import java.sql.DriverManager;
import java.sql.*;
import Database.dbconnection;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.RowSorter;
import javax.swing.SortOrder;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import javax.swing.JOptionPane;
import javax.swing.RowSorter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

public class MenuCustomer extends javax.swing.JFrame {
    /**
     * Creates new form MenuPIC
     */
    Connection conn;
    PreparedStatement ps;
    ResultSet rs;
    
    public MenuCustomer() {
        initComponents();
        this.setExtendedState(MAXIMIZED_BOTH);
        DefaultTableModel model = new DefaultTableModel();
        tblcustomer.setModel(model);
        tampilkanDataTabel(); // Panggil metode tampilkanDataTabel() di sini
        tblcustomer.addMouseListener(new java.awt.event.MouseAdapter() {
        @Override
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            tblcustomerMouseClicked(evt);
        }
    });
        btnsearch.addActionListener(new java.awt.event.ActionListener() {
    @Override
    public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnsearchActionPerformed(evt);
    }
});
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        btnhapus = new javax.swing.JButton();
        btntambah = new javax.swing.JButton();
        btnubah = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        txtidcustomer = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtnamalengkap = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtnohp = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        cbjk = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        cbstatus = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblcustomer = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        txtsearch = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        btnsearch = new javax.swing.JButton();
        btnprint = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        mnlogout = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenu6 = new javax.swing.JMenu();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenu7 = new javax.swing.JMenu();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Menu Customer");
        setBackground(new java.awt.Color(255, 255, 255));
        setIconImage(new javax.swing.ImageIcon(getClass().getResource("/Assets/logo.png")).getImage());
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(64, 61, 61));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("RESIDENCE");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(157, 159, 157));
        jLabel10.setText("NUR");

        btnhapus.setBackground(new java.awt.Color(242, 242, 242));
        btnhapus.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnhapus.setText("HAPUS");
        btnhapus.setBorder(null);
        btnhapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnhapusActionPerformed(evt);
            }
        });

        btntambah.setBackground(new java.awt.Color(242, 242, 242));
        btntambah.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btntambah.setText("TAMBAH");
        btntambah.setBorder(null);
        btntambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btntambahActionPerformed(evt);
            }
        });

        btnubah.setBackground(new java.awt.Color(242, 242, 242));
        btnubah.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnubah.setText("UBAH");
        btnubah.setBorder(null);
        btnubah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnubahActionPerformed(evt);
            }
        });

        jLabel11.setForeground(new java.awt.Color(242, 242, 242));
        jLabel11.setText("Id Customer");

        txtidcustomer.setBorder(null);

        jLabel3.setForeground(new java.awt.Color(242, 242, 242));
        jLabel3.setText("Nama Lengkap");

        txtnamalengkap.setBorder(null);

        jLabel4.setForeground(new java.awt.Color(242, 242, 242));
        jLabel4.setText("Nomor Handphone");

        txtnohp.setBorder(null);

        jLabel5.setForeground(new java.awt.Color(242, 242, 242));
        jLabel5.setText("Jenis Kelamin");

        cbjk.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Laki Laki", "Perempuan" }));

        jLabel12.setForeground(new java.awt.Color(242, 242, 242));
        jLabel12.setText("Status");

        cbstatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mahasiswa", "Pekerja", "Lainya" }));
        cbstatus.setToolTipText("");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtidcustomer, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel9))
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbjk, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtnamalengkap, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtnohp, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 301, Short.MAX_VALUE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbstatus, javax.swing.GroupLayout.Alignment.LEADING, 0, 301, Short.MAX_VALUE))
                        .addContainerGap(24, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btntambah, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnubah, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnhapus, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtidcustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGap(7, 7, 7)
                .addComponent(txtnamalengkap, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtnohp, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbjk, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbstatus, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnubah, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnhapus, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btntambah, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(319, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(253, 253, 253));

        tblcustomer.setBackground(new java.awt.Color(253, 253, 253));
        tblcustomer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblcustomer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblcustomerMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblcustomer);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1155, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );

        jPanel3.setBackground(new java.awt.Color(204, 204, 204));

        txtsearch.setBorder(null);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(64, 61, 61));
        jLabel2.setText("Search :");

        btnsearch.setBackground(new java.awt.Color(242, 242, 242));
        btnsearch.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnsearch.setText("search");
        btnsearch.setBorder(null);
        btnsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsearchActionPerformed(evt);
            }
        });

        btnprint.setBackground(new java.awt.Color(242, 242, 242));
        btnprint.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnprint.setText("CETAK DATA");
        btnprint.setBorder(null);
        btnprint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnprintActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnprint, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtsearch, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnsearch, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtsearch, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(btnsearch, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnprint, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jMenuBar1.setPreferredSize(new java.awt.Dimension(81, 35));

        jMenu1.setText("Exit");

        mnlogout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assets/logout.png"))); // NOI18N
        mnlogout.setText("Logout");
        mnlogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnlogoutActionPerformed(evt);
            }
        });
        jMenu1.add(mnlogout);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Manage");

        jMenuItem2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assets/home.png"))); // NOI18N
        jMenuItem2.setText("Home");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenu5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assets/person.png"))); // NOI18N
        jMenu5.setText("Manage Person");

        jMenuItem6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assets/pic.png"))); // NOI18N
        jMenuItem6.setText("PIC");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem6);

        jMenu2.add(jMenu5);

        jMenu6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assets/manageroom.png"))); // NOI18N
        jMenu6.setText("Manage Room");

        jMenuItem8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assets/room.png"))); // NOI18N
        jMenuItem8.setText("Kamar");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu6.add(jMenuItem8);

        jMenu2.add(jMenu6);

        jMenu7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assets/managekeuangan.png"))); // NOI18N
        jMenu7.setText("Manage Keuangan");

        jMenuItem9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assets/biaya.png"))); // NOI18N
        jMenuItem9.setText("Pengeluaran");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenu7.add(jMenuItem9);

        jMenuItem10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assets/report.png"))); // NOI18N
        jMenuItem10.setText("Laporan Bulanan");
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem10ActionPerformed(evt);
            }
        });
        jMenu7.add(jMenuItem10);

        jMenu2.add(jMenu7);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Service");

        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assets/maintenance.png"))); // NOI18N
        jMenuItem1.setText("Maintenance");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem1);

        jMenuBar1.add(jMenu3);

        jMenu4.setText("Information");

        jMenuItem3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assets/biaya.png"))); // NOI18N
        jMenuItem3.setText("Cetak Informasi Tarif Kontrakan");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem3);

        jMenuItem4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assets/peraturan.png"))); // NOI18N
        jMenuItem4.setText("Cetak Peraturan Kontrakan");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem4);

        jMenuItem5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assets/maintenance_report.png"))); // NOI18N
        jMenuItem5.setText("Cetak Informasi Maintenance");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem5);

        jMenuBar1.add(jMenu4);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    
    private void mnlogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnlogoutActionPerformed
        // TODO add your handling code here:
        LoginForm pindah = new LoginForm();
        pindah.setVisible(true);
        dispose();
    }//GEN-LAST:event_mnlogoutActionPerformed
    
    private void tampilkanDataTabel() {
        try {
        Connection conn = dbconnection.koneksi();
        String sql = "SELECT * FROM customer";
        PreparedStatement ps = conn.prepareStatement(sql);
        ResultSet rs = ps.executeQuery();

        // Menggunakan DefaultTableModel untuk menampung data dari ResultSet
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("id_customer");
        model.addColumn("Nama Lengkap");
        model.addColumn("Nomor Handphone");
        model.addColumn("Jenis Kelamin");
        model.addColumn("Status");

        while (rs.next()) {
            // Ambil data dari ResultSet
            String id_customer = rs.getString("id_customer");
            String namaLengkap = rs.getString("nama");
            String noHp = rs.getString("nohp");
            String jenisKelamin = rs.getString("jeniskl");
            String status = rs.getString("status");

            // Tambahkan data ke dalam model
            model.addRow(new Object[]{id_customer, namaLengkap, noHp, jenisKelamin, status});
        }

        // Set model ke dalam tabel
        tblcustomer.setModel(model);

        // Aktifkan pengurutan pada tabel
        TableRowSorter<TableModel> sorter = new TableRowSorter<>(model);
        tblcustomer.setRowSorter(sorter);

        // Atur pengurutan awal (misalnya, berdasarkan kolom pertama secara default)
        List<RowSorter.SortKey> sortKeys = new ArrayList<>();
        sortKeys.add(new RowSorter.SortKey(0, SortOrder.ASCENDING));
        sorter.setSortKeys(sortKeys);
        sorter.sort();

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(rootPane, "Error saat menampilkan data: " + e.getMessage());
    } finally {
        // Tidak perlu menutup koneksi di sini karena koneksi didapatkan dari kelas dbconnection
    }
    }
    private void tampilkanData() {
        try {
        Connection conn = dbconnection.koneksi();
        String sql = "SELECT * FROM customer";
        PreparedStatement ps = conn.prepareStatement(sql);
        ResultSet rs = ps.executeQuery();

        // Menggunakan DefaultTableModel untuk menampung data dari ResultSet
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("id_customer");
        model.addColumn("Nama Lengkap");
        model.addColumn("Nomor Handphone");
        model.addColumn("Jenis Kelamin");
        model.addColumn("Status");

        while (rs.next()) {
            // Ambil data dari ResultSet
            String id_customer = rs.getString("id_customer");
            String namaLengkap = rs.getString("nama");
            String noHp = rs.getString("nohp");
            String jenisKelamin = rs.getString("jeniskl");
            String status = rs.getString("status");

            // Tambahkan data ke dalam model
            model.addRow(new Object[]{id_customer, namaLengkap, noHp, jenisKelamin, status});
        }

        // Set model ke dalam tabel
        tblcustomer.setModel(model);

        // Aktifkan pengurutan pada tabel
        TableRowSorter<TableModel> sorter = new TableRowSorter<>(model);
        tblcustomer.setRowSorter(sorter);

        // Atur pengurutan awal (misalnya, berdasarkan kolom pertama secara default)
        List<RowSorter.SortKey> sortKeys = new ArrayList<>();
        sortKeys.add(new RowSorter.SortKey(0, SortOrder.ASCENDING));
        sorter.setSortKeys(sortKeys);
        sorter.sort();

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(rootPane, "Error saat menampilkan data: " + e.getMessage());
    } finally {
        // Tidak perlu menutup koneksi di sini karena koneksi didapatkan dari kelas dbconnection
    }
    }
    private void btnhapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnhapusActionPerformed
    try {
        // Mendapatkan koneksi dari kelas dbconnection
        Connection conn = dbconnection.koneksi();

        // Pengambilan nilai id_pic dari inputan pengguna
        String idCusToDelete = txtidcustomer.getText(); // Gantilah dengan komponen input yang sesuai

        // Query SQL untuk menghapus data berdasarkan id_pic
        String deleteQuery = "DELETE FROM customer WHERE id_customer = ?";
        PreparedStatement deletePS = conn.prepareStatement(deleteQuery);
        deletePS.setString(1, idCusToDelete);

        int deleteResult = deletePS.executeUpdate();
        if (deleteResult > 0) {
            JOptionPane.showMessageDialog(rootPane, "Data berhasil dihapus");
            tampilkanData(); // Tampilkan kembali data pada tabel setelah menghapus
        } else {
            JOptionPane.showMessageDialog(rootPane, "Data dengan id_Customer tersebut tidak ditemukan");
        }
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(rootPane, "Hapus data gagal: " + ex.getMessage());
    }
    kosongkan();
    }//GEN-LAST:event_btnhapusActionPerformed

    private void btntambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btntambahActionPerformed
    try {
        // Mendapatkan koneksi dari kelas dbconnection
        Connection conn = dbconnection.koneksi();

        // Pengambilan nilai dari inputan pengguna
        String id_customer_input = txtidcustomer.getText();
        // Format id_customer menjadi "C-XX"
        String id_customer = String.format("C-%02d", Integer.valueOf(id_customer_input));
        String namaLengkap = txtnamalengkap.getText();
        String noHp = txtnohp.getText();
        String jenisKelamin = (String) cbjk.getSelectedItem();  
        String status = (String) cbstatus.getSelectedItem(); 

        // Memeriksa apakah ada kolom yang kosong
        if(namaLengkap.isEmpty() || noHp.isEmpty() || jenisKelamin == null || jenisKelamin.equals("Pilih Jenis Kelamin") || status == null || status.equals("Pilih Status Customer")) {
            JOptionPane.showMessageDialog(rootPane, "Mohon lengkapi semua data!");
            return; // Menghentikan eksekusi jika ada kolom yang kosong
        }

        // Query SQL untuk mengecek apakah id_customer atau nama sudah ada
        String checkDataQuery = "SELECT COUNT(*) FROM customer WHERE id_customer = ? OR nama = ?";
        PreparedStatement checkDataPS = conn.prepareStatement(checkDataQuery);
        checkDataPS.setString(1, id_customer);
        checkDataPS.setString(2, namaLengkap);
        ResultSet rs = checkDataPS.executeQuery();

        rs.next();
        int count = rs.getInt(1);

        if (count > 0) {
            JOptionPane.showMessageDialog(rootPane, "Maaf, id_customer atau nama sudah ada");
        } else {
            // Query SQL untuk menambahkan data baru ke tabel customer
            String insertQuery = "INSERT INTO customer (id_customer, nama, nohp, jeniskl, status) VALUES (?, ?, ?, ?, ?)";
            PreparedStatement ps = conn.prepareStatement(insertQuery);
            ps.setString(1, id_customer);
            ps.setString(2, namaLengkap);
            ps.setString(3, noHp);
            ps.setString(4, jenisKelamin);
            ps.setString(5, status);

            int result = ps.executeUpdate();
            if (result > 0) {
                JOptionPane.showMessageDialog(rootPane, "Data berhasil ditambahkan");
                kosongkan(); // Setelah berhasil, kosongkan inputan
                tampilkanData(); // Tampilkan kembali data pada tabel
            } else {
                JOptionPane.showMessageDialog(rootPane, "Data gagal ditambahkan");
            }
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(rootPane, "Tambah data gagal: " + e.getMessage());
    } finally {
        // Tidak perlu menutup koneksi di sini karena koneksi didapatkan dari kelas dbconnection
    }
    kosongkan(); // Kosongkan data
    }//GEN-LAST:event_btntambahActionPerformed

    private void btnubahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnubahActionPerformed
    try {
        // Mendapatkan koneksi dari kelas dbconnection
        Connection conn = dbconnection.koneksi();

        // Pengambilan nilai dari inputan pengguna
        String idCusToUpdate = txtidcustomer.getText();
        String namaLengkap = txtnamalengkap.getText();
        String noHp = txtnohp.getText();
        String jenisKelamin = (String) cbjk.getSelectedItem();  
        String status = (String) cbstatus.getSelectedItem();

        // Query SQL untuk memeriksa apakah id_pic sudah ada
        String checkIdCusQuery = "SELECT COUNT(*) FROM customer WHERE id_customer = ?";
        PreparedStatement checkIdCusPS = conn.prepareStatement(checkIdCusQuery);
        checkIdCusPS.setString(1, idCusToUpdate);
        ResultSet rs = checkIdCusPS.executeQuery();

        rs.next();
        int count = rs.getInt(1);

        if (count == 0) {
            JOptionPane.showMessageDialog(rootPane, "Data dengan id_pic tersebut tidak ditemukan");
        } else {
            // Query SQL untuk mengubah data pada tabel customer
            String updateQuery = "UPDATE customer SET nama = ?, nohp = ?, jeniskl = ?, status = ? WHERE id_customer = ?";
            PreparedStatement ps = conn.prepareStatement(updateQuery);
            ps.setString(1, namaLengkap);
            ps.setString(2, noHp);
            ps.setString(3, jenisKelamin);
            ps.setString(4, status);
            ps.setString(5, idCusToUpdate);

            int updateResult = ps.executeUpdate();
            if (updateResult > 0) {
                JOptionPane.showMessageDialog(rootPane, "Data berhasil diubah");
                tampilkanData(); // Tampilkan kembali data pada tabel setelah mengubah
            } else {
                JOptionPane.showMessageDialog(rootPane, "Data gagal diubah");
            }
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(rootPane, "Ubah data gagal: " + e.getMessage());
    }
    kosongkan();
    }//GEN-LAST:event_btnubahActionPerformed

    private void btnsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsearchActionPerformed
    try {
        // Mendapatkan koneksi dari kelas dbconnection
        Connection conn = dbconnection.koneksi();

        // Pengambilan nilai dari inputan pencarian
        String searchText = txtsearch.getText();

        // Cek apakah searchText kosong
        if (searchText.isEmpty()) {
            tampilkanDataTabel(); // Jika kosong, tampilkan semua data
            return;
        }

        // Query SQL untuk melakukan pencarian berdasarkan teks pada kolom nama_lengkap atau username
        String searchQuery = "SELECT * FROM customer WHERE id_customer LIKE ? OR nama LIKE ? OR nohp LIKE ? OR jeniskl LIKE ? OR status LIKE ?";
        PreparedStatement ps = conn.prepareStatement(searchQuery);
        ps.setString(1, "%" + searchText + "%");
        ps.setString(2, "%" + searchText + "%");
        ps.setString(3, "%" + searchText + "%");
        ps.setString(4, "%" + searchText + "%");
        ps.setString(5, "%" + searchText + "%");

        ResultSet rs = ps.executeQuery();

        // Menghapus semua baris dalam model tabel
        DefaultTableModel model = (DefaultTableModel) tblcustomer.getModel();
        model.setRowCount(0);

        // Menambahkan hasil pencarian ke dalam model tabel
        while (rs.next()) {
            Object[] row = {
                rs.getString("id_customer"),
                rs.getString("nama"),
                rs.getString("nohp"),
                rs.getString("jeniskl"),
                rs.getString("status"),   
            };
            model.addRow(row);
        }

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(rootPane, "Pencarian gagal: " + e.getMessage());
    }
    }//GEN-LAST:event_btnsearchActionPerformed

    private void tblcustomerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblcustomerMouseClicked
        // TODO add your handling code here:
    int baris = tblcustomer.rowAtPoint(evt.getPoint());

    // Mengisi formulir dengan data dari baris yang diklik
    txtidcustomer.setText(tblcustomer.getValueAt(baris, 0).toString());
    txtnamalengkap.setText(tblcustomer.getValueAt(baris, 1).toString());
    txtnohp.setText(tblcustomer.getValueAt(baris, 2).toString());

    // Pilihan jenis kelamin
    String jenisKelamin = tblcustomer.getValueAt(baris, 3).toString();
    cbjk.setSelectedItem(jenisKelamin);
    String status = tblcustomer.getValueAt(baris, 4).toString();
    cbstatus.setSelectedItem(status);
    }//GEN-LAST:event_tblcustomerMouseClicked

    private void btnprintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnprintActionPerformed
        // TODO add your handling code here:
        try {
        // Mendapatkan input stream dari file JasperReport
        InputStream reportStream;
            reportStream = getClass().getResourceAsStream("/Reports/Report_DataCustomer.jasper");

        // Memeriksa apakah input stream berhasil didapatkan
        if (reportStream != null) {
            // Mengisi laporan dengan data dari database dan file JasperReport
            JasperPrint jp = JasperFillManager.fillReport(reportStream, null, dbconnection.koneksi());
            
            // Menampilkan laporan menggunakan JasperViewer
            JasperViewer.viewReport(jp, false);
        } else {
            JOptionPane.showMessageDialog(this, "JasperReport file not found", "Error", JOptionPane.ERROR_MESSAGE);
        }
    } catch (JRException e) {
        JOptionPane.showMessageDialog(this, "Error Displaying Report: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_btnprintActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        MenuService pindah = new MenuService();
        pindah.setVisible(true);
        dispose();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        try {
            // Mendapatkan input stream dari file JasperReport
            InputStream reportStream;
            reportStream = getClass().getResourceAsStream("/Reports/InformasiTarif.jasper");

            // Memeriksa apakah input stream berhasil didapatkan
            if (reportStream != null) {
                // Mengisi laporan dengan data dari database dan file JasperReport
                JasperPrint jp = JasperFillManager.fillReport(reportStream, null, dbconnection.koneksi());

                // Menampilkan laporan menggunakan JasperViewer
                JasperViewer.viewReport(jp, false);
            } else {
                JOptionPane.showMessageDialog(this, "JasperReport file not found", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (JRException e) {
            JOptionPane.showMessageDialog(this, "Error Displaying Report: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
        try {
            // Mendapatkan input stream dari file JasperReport
            InputStream reportStream;
            reportStream = getClass().getResourceAsStream("/Reports/InformasiPeraturan.jasper");

            // Memeriksa apakah input stream berhasil didapatkan
            if (reportStream != null) {
                // Mengisi laporan dengan data dari database dan file JasperReport
                JasperPrint jp = JasperFillManager.fillReport(reportStream, null, dbconnection.koneksi());

                // Menampilkan laporan menggunakan JasperViewer
                JasperViewer.viewReport(jp, false);
            } else {
                JOptionPane.showMessageDialog(this, "JasperReport file not found", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (JRException e) {
            JOptionPane.showMessageDialog(this, "Error Displaying Report: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        // TODO add your handling code here:
        try {
            // Mendapatkan input stream dari file JasperReport
            InputStream reportStream;
            reportStream = getClass().getResourceAsStream("/Reports/InformasiKerusakan.jasper");

            // Memeriksa apakah input stream berhasil didapatkan
            if (reportStream != null) {
                // Mengisi laporan dengan data dari database dan file JasperReport
                JasperPrint jp = JasperFillManager.fillReport(reportStream, null, dbconnection.koneksi());

                // Menampilkan laporan menggunakan JasperViewer
                JasperViewer.viewReport(jp, false);
            } else {
                JOptionPane.showMessageDialog(this, "JasperReport file not found", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (JRException e) {
            JOptionPane.showMessageDialog(this, "Error Displaying Report: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        // TODO add your handling code here:
        MenuPIC pindah = new MenuPIC();
        pindah.setVisible(true);
        dispose();
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        // TODO add your handling code here:
        MenuKamar pindah = new MenuKamar();
        pindah.setVisible(true);
        dispose();
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
        // TODO add your handling code here:
        MenuPengeluaran pindah = new MenuPengeluaran();
        pindah.setVisible(true);
        dispose();
    }//GEN-LAST:event_jMenuItem9ActionPerformed

    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed
        // TODO add your handling code here:
        MenuLaporanBulanan pindah = new MenuLaporanBulanan();
        pindah.setVisible(true);
        dispose();
    }//GEN-LAST:event_jMenuItem10ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        MenuUtama pindah = new MenuUtama();
        pindah.setVisible(true);
        dispose();
    }//GEN-LAST:event_jMenuItem2ActionPerformed
    
    private void kosongkan(){
    txtidcustomer.setText("");
    txtnamalengkap.setText("");
    txtnohp.setText("");
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenuCustomer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnhapus;
    private javax.swing.JButton btnprint;
    private javax.swing.JButton btnsearch;
    private javax.swing.JButton btntambah;
    private javax.swing.JButton btnubah;
    private javax.swing.JComboBox<String> cbjk;
    private javax.swing.JComboBox<String> cbstatus;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenu jMenu7;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuItem mnlogout;
    private javax.swing.JTable tblcustomer;
    private javax.swing.JTextField txtidcustomer;
    private javax.swing.JTextField txtnamalengkap;
    private javax.swing.JTextField txtnohp;
    private javax.swing.JTextField txtsearch;
    // End of variables declaration//GEN-END:variables
}
